# Simple workflow for deploying static content to GitHub Pages
name: Deploy resume HTML to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: "Create a folder called output"
        run: |
          mkdir output
          cp resume-stylesheet.css output/resume-stylesheet.css
          cp resume.md output/${{ github.actor }}-resume.md
      - name: Install pandoc and wkhtmltopdf
        run: |
          wget https://github.com/jgm/pandoc/releases/download/3.0.1/pandoc-3.0.1-1-amd64.deb
          wget https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6.1-2/wkhtmltox_0.12.6.1-2.jammy_amd64.deb
          sudo apt install ./pandoc-3.0.1-1-amd64.deb
          sudo apt install ./wkhtmltox_0.12.6.1-2.jammy_amd64.deb
      - name: "Convert MD to HTML"
        run: |
          pandoc resume.md -f markdown -t html -c resume-stylesheet.css -s -o output/resume.html

      - name: "Convert HTML to PDF "
        run: "wkhtmltopdf --enable-local-file-access output/resume.html output/resume.pdf"

      - name: "Convert MD to DOCX"
        run: pandoc -o output/resume.docx --reference-doc=resume-docx-reference.docx resume.md
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          # Upload entire repository
          path: "output"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
